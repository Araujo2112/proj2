-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cod_postal
(
    id_cod_postal character varying(10) COLLATE pg_catalog."default" NOT NULL,
    localidade character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cod_postal_pkey PRIMARY KEY (id_cod_postal)
    );

CREATE TABLE IF NOT EXISTS public.espaco_desportivo
(
    id_espaco integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    capacidade integer NOT NULL,
    disponibilidade boolean NOT NULL,
    lote character varying(50) COLLATE pg_catalog."default",
    preco_hora numeric(10, 2) NOT NULL,
    id_tipo_espaco integer NOT NULL,
    hora_abertura time without time zone NOT NULL DEFAULT '08:00:00'::time without time zone,
    hora_fecho time without time zone NOT NULL DEFAULT '22:00:00'::time without time zone,
    CONSTRAINT espaco_desportivo_pkey PRIMARY KEY (id_espaco)
    );

CREATE TABLE IF NOT EXISTS public.manutencao
(
    id_manu integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    custo double precision NOT NULL,
    descricao character varying(255) COLLATE pg_catalog."default",
    dt_fim date,
    dt_ini date NOT NULL,
    id_espaco integer NOT NULL,
    id_estado integer NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT manutencao_pkey PRIMARY KEY (id_manu)
    );

CREATE TABLE IF NOT EXISTS public.notificacao
(
    id_notificacao integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    data_notificacao date NOT NULL,
    hora_notificacao time(6) without time zone NOT NULL,
    mensagem character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT notificacao_pkey PRIMARY KEY (id_notificacao)
    );

CREATE TABLE IF NOT EXISTS public.pagamento
(
    id_pagamento integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    dt_pagamento date,
    id_estado integer NOT NULL,
    id_reserva integer NOT NULL,
    id_tipo_pag integer,
    id_usuario integer NOT NULL,
    CONSTRAINT pagamento_pkey PRIMARY KEY (id_pagamento)
    );

CREATE TABLE IF NOT EXISTS public.relatorio
(
    id serial NOT NULL,
    id_tipo integer NOT NULL,
    data_geracao date NOT NULL,
    data_inicio date NOT NULL,
    data_fim date NOT NULL,
    caminho_pdf text COLLATE pg_catalog."default" NOT NULL,
    descricao character varying(255) COLLATE pg_catalog."default",
    data_criacao date,
    CONSTRAINT relatorio_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.reserva
(
    id_reserva integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    dt date NOT NULL,
    h_fim time(6) without time zone NOT NULL,
    h_ini time(6) without time zone NOT NULL,
    id_espaco integer NOT NULL,
    id_estado integer NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT reserva_pkey PRIMARY KEY (id_reserva)
    );

CREATE TABLE IF NOT EXISTS public.tipo_espaco_desportivo
(
    id_tipo_espaco integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_espaco_desportivo_pkey PRIMARY KEY (id_tipo_espaco),
    CONSTRAINT ukgiv34k9pkmheo44dldwatl3hf UNIQUE (tipo)
    );

CREATE TABLE IF NOT EXISTS public.tipo_estado
(
    id_estado integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    estado character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_estado_pkey PRIMARY KEY (id_estado)
    );

CREATE TABLE IF NOT EXISTS public.tipo_pagamento
(
    id_tipo_pag integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_pagamento_pkey PRIMARY KEY (id_tipo_pag)
    );

CREATE TABLE IF NOT EXISTS public.tipo_relatorio
(
    id_tipo serial NOT NULL,
    nome character varying(50) COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT tipo_relatorio_pkey PRIMARY KEY (id_tipo),
    CONSTRAINT tipo_relatorio_nome_key UNIQUE (nome)
    );

CREATE TABLE IF NOT EXISTS public.tipo_usuario
(
    id_tipo_usuario integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tipo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_usuario_pkey PRIMARY KEY (id_tipo_usuario)
    );

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    n_porta integer,
    nif integer NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    rua character varying(255) COLLATE pg_catalog."default",
    tel character varying(15) COLLATE pg_catalog."default" NOT NULL,
    cod_postal character varying(10) COLLATE pg_catalog."default",
    id_tipo_usuario integer NOT NULL,
    email character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario)
    );

ALTER TABLE IF EXISTS public.espaco_desportivo
    ADD CONSTRAINT fkrhxshomfjpr8gc0toh225er4c FOREIGN KEY (id_tipo_espaco)
    REFERENCES public.tipo_espaco_desportivo (id_tipo_espaco) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.manutencao
    ADD CONSTRAINT fkblm1p4eyipaixy2ngg0ojp4oe FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.manutencao
    ADD CONSTRAINT fkeoru3gyx6rss8et78b0amqy08 FOREIGN KEY (id_espaco)
    REFERENCES public.espaco_desportivo (id_espaco) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.manutencao
    ADD CONSTRAINT fkjm52cq80vt4xh9ucfpni6jsf2 FOREIGN KEY (id_estado)
    REFERENCES public.tipo_estado (id_estado) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notificacao
    ADD CONSTRAINT fklklb6xjbjlatiuvdywow2ig5s FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagamento
    ADD CONSTRAINT fk7dwd98968t8mha1kghaob7rp6 FOREIGN KEY (id_reserva)
    REFERENCES public.reserva (id_reserva) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagamento
    ADD CONSTRAINT fk8ys3vc6mvsccrj79ihe8g3dxf FOREIGN KEY (id_estado)
    REFERENCES public.tipo_estado (id_estado) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagamento
    ADD CONSTRAINT fka5nokh8dkcl4xdgw3qtlinbpe FOREIGN KEY (id_tipo_pag)
    REFERENCES public.tipo_pagamento (id_tipo_pag) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagamento
    ADD CONSTRAINT fkguy43rh3ymgs1gixuwb4tb833 FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.relatorio
    ADD CONSTRAINT relatorio_id_tipo_fkey FOREIGN KEY (id_tipo)
    REFERENCES public.tipo_relatorio (id_tipo) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.reserva
    ADD CONSTRAINT fk8kupwxei806ngwafd13ma0847 FOREIGN KEY (id_estado)
    REFERENCES public.tipo_estado (id_estado) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reserva
    ADD CONSTRAINT fkndwfgdg6kqhjvi1r90k4x7ol2 FOREIGN KEY (id_espaco)
    REFERENCES public.espaco_desportivo (id_espaco) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reserva
    ADD CONSTRAINT fksbrwim47vm17adpuqj3dou9au FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fkh1n330u8y5c4xavy0pgfuaxwq FOREIGN KEY (cod_postal)
    REFERENCES public.cod_postal (id_cod_postal) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fkr9xk0brid147iaydo8j47o9p2 FOREIGN KEY (id_tipo_usuario)
    REFERENCES public.tipo_usuario (id_tipo_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;



-----------------------------
-------------------------
--Inserts
--ATENÇÃO!!!! NEM SEI SE FUNCIONAM SEQUER por causa de atualizacoes
--------------------------------
----------------------------------


--tipo_estado
INSERT INTO public.tipo_estado (id_estado, estado)
VALUES 
(1, 'Feito'),
(2, 'Cancelado'),
(3, 'Em Processo');

-- Tipo de usuário
INSERT INTO public.tipo_usuario (id_tipo_usuario, tipo)
VALUES
(1, 'admin'),
(2, 'técnico de manutenção'),
(3, 'user');

-- Código postal
INSERT INTO public.cod_postal (id_cod_postal, localidade)
VALUES
(1, '4750-052');

-- Usuários
INSERT INTO public.usuario (nome, tel, nif, cod_postal, id_tipo_usuario, rua, n_porta)
VALUES
('Joao Antonio', '+351933456789', 123456789, '1', 1, 'Rua Pereiras', 10),
('Carlos Ferreira', '+351911223344', 555444333, '1', 2, 'Rua das Oficinas', 5),
('Maria Silva', '+351912345678', 987654321, '1', 3, 'Avenida Central', 20);

-- Tipos de espaço desportivo
INSERT INTO public.tipo_espaco_desportivo (id_tipo_espaco, tipo)
VALUES 
(1, 'Futebol'),
(2, 'Basquetebol'),
(3, 'Ténis');

-- Espaços desportivos
INSERT INTO public.espaco_desportivo (id_tipo_espaco, capacidade, lote, preco_hora, disponibilidade)
VALUES 
(1, 100, 'Lote A', 25.00, TRUE),
(2, 50, 'Lote B', 20.00, TRUE),
(3, 30, 'Lote C', 15.00, FALSE),
(1, 120, 'Lote D', 30.00, TRUE);

--tipos de pagamento
INSERT INTO public.tipo_pagamento (id_tipo_pag, nome)
VALUES 
(1, 'Cartão de Crédito'),
(2, 'MB Way');

-- Inserindo dados de Manutenção
INSERT INTO public.manutencao (id_usuario, id_espaco, dt_ini, dt_fim, descricao, custo, id_estado)
VALUES
(2, 1, '2024-03-01', '2024-03-01', 'Troca da relva sintética', 500.00, 1), 
(2, 2, '2024-03-05', '2024-03-05', 'Pintura das marcações da quadra', 200.00, 1),
(2, 4, '2024-03-10', '2024-03-10', 'Reparação das redes do campo', 150.00, 1);

-- Reservas
INSERT INTO public.reserva (id_usuario, id_espaco, dt, h_ini, h_fim, id_estado)
VALUES
(3, 1, '2024-03-15', '14:00', '16:00', 1),
(3, 3, '2024-03-18', '10:00', '12:00', 1),
(3, 2, '2024-03-20', '18:00', '20:00', 1);

-- Pagamentos
INSERT INTO public.pagamento (id_reserva, dt_pagamento, id_estado, id_tipo_pag, id_usuario)
VALUES
(1, '2024-03-15', 2, 1, 3), 
(2, '2024-03-18', 2, 2, 3),
(3, '2024-03-20', 2, 1, 3); 

-- Notificações
INSERT INTO public.notificacao (id_usuario, mensagem, data_notificacao, hora_notificacao)
VALUES
(3, 'Reserva confirmada para o espaço Futebol em 15/03/2024', '2024-03-10', '10:30:00'),
(3, 'Reserva confirmada para o espaço Ténis em 18/03/2024', '2024-03-12', '11:15:00'),
(3, 'Reserva confirmada para o espaço Basquetebol em 20/03/2024', '2024-03-15', '09:45:00'),
(2, 'Manutenção programada para o espaço Futebol em 01/03/2024', '2024-02-28', '14:00:00'),
(2, 'Manutenção programada para o espaço Basquetebol em 05/03/2024', '2024-03-02', '15:30:00'),
(2, 'Manutenção programada para o espaço Futebol em 10/03/2024', '2024-03-07', '16:45:00');





